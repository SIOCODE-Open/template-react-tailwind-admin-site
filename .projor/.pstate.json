{
  "generatedSource": [
    {
      "filename": "docker-compose.yaml",
      "content": "version: '3.8'\nservices:\n  app:\n    build:\n      dockerfile: Dockerfile\n      context: .\n    ports:\n      - 3000:80",
      "contentHash": "aa2f3b205e513490ba4cf3722ee75e45c95d870e09676764e80e83869862e90a",
      "noWriteIfExists": false
    },
    {
      "filename": "Dockerfile",
      "content": "FROM node:22 as builder\nWORKDIR /app\nADD package.json /app/package.json\nADD tsconfig.json /app/tsconfig.json\nADD tailwind.config.js /app/tailwind.config.js\nRUN npm install\nADD src /app/src\nADD public /app/public\nRUN npm run build\n\nFROM nginx:alpine as runner\nCOPY --from=builder /app/public /usr/share/nginx/html",
      "contentHash": "c077a6f041f0d2ed6d1e328d961aa48128e4341fb6f82d97e9a315531c6e9af1",
      "noWriteIfExists": false
    },
    {
      "filename": "package.json",
      "content": "{\n    \"name\": \"@my-org/admin-site\",\n    \"version\": \"0.0.1\",\n    \"description\": \"_You can edit this description in [&#x60;.projor/project.pglobal.yaml&#x60;](.projor/project.pglobal.yaml)_\",\n    \"private\": true,\n    \"dependencies\": {\n        \"react\": \"18.3.1\",\n        \"react-dom\": \"18.3.1\",\n        \"@iconify/react\": \"5.0.2\",\n        \"classnames\": \"2.5.1\"\n    },\n    \"devDependencies\": {\n        \"esbuild\": \"0.23.1\",\n        \"typescript\": \"5.6.2\",\n        \"@types/react\": \"18.3.6\",\n        \"@types/react-dom\": \"18.3.0\",\n        \"tailwindcss\": \"3.4.11\",\n        \"concurrently\": \"9.0.1\"\n    },\n    \"scripts\": {\n        \"build:css\": \"tailwindcss build src/tailwind.css -o public/index.css --minify\",\n        \"build:js\": \"esbuild src/index.tsx --bundle --outfile=public/index.js --minify --jsx=automatic\",\n        \"build\": \"npm run build:css && npm run build:js\",\n        \"serve:css\": \"tailwindcss build src/tailwind.css -o public/index.css --watch\",\n        \"serve:js\": \"esbuild src/index.tsx --bundle --outfile=public/index.js --sourcemap=inline --serve=0.0.0.0:3000 --servedir=public --jsx=automatic\",\n        \"serve\": \"concurrently -n \\\"css,js\\\" \\\"npm run serve:css\\\" \\\"npm run serve:js\\\"\"\n    }\n}\n",
      "contentHash": "d07684012139452f78840c169ccbf097984f1abab8e5b329934659f0062f87e3",
      "noWriteIfExists": false
    },
    {
      "filename": "PAGES.md",
      "content": "# Pages\n\nThis file contains information about all of the generated pages.\n\n## Dashboard\n\nThe admin dashboard page\n\nType: Dashboard (_A dashboard page_)\n\nPage title: `Admin dashboard`\n\nPage message: `This is the admin dashboard. It is left empty for this example.`\n\n*Post-actions*\n\n* **Open Products** (goes to _Products_) - No description\n\n\n\n\n## Products\n\nThe list of products page\n\nType: List Page (_A page that lists items_)\n\nPage title: `Products`\n\nPage message: `This is the list of products. You can edit or delete them.`\n\n\n\n*Columns*\n\n* **Id** (Number) - The unique identifier for each product\n* **Name** (String) - No description\n* **Description** (String) - The description of the product\n* **Buys Last Week** (Number) - The number of buys in the last week\n* **Price** (String) - The price of the product\n\n*Pre-actions*\n\n* **Create** (goes to _Create Product_) - No description\n\n*Post-actions*\n\n* **Open Dashboard** (goes to _Dashboard_) - No description\n\n*Item actions*\n\n* **Edit** (goes to _Edit Product_) - Allow the user to navigate to the EditProduct page\n* **Delete** (goes to _Products_) - No description\n\n\n## Edit Product\n\nNo description\n\nType: Edit Page (_A page that edits an item_)\n\nPage title: `Edit Vacuum Cleaner`\n\nPage message: `You are editing product 465191de-2108-4dc0-ac81-d3d53f2176e1 called Vacuum Cleaner.`\n\n\n*Fields*\n\n* **Name** (String) - The name of the product\n* **Description** (String) - No description\n* **Price** (String) - The price of the product\n\n*Post-actions*\n\n* **Cancel** (goes to _Products_) - Cancel goes back to the Products page\n* **Save** (goes to _Products_) - Save goes back to the Products page\n* **Delete** (goes to _Products_) - No description\n\n\n\n## Create Product\n\nNo description\n\nType: Edit Page (_A page that edits an item_)\n\nPage title: `Create Product`\n\nPage message: `You are creating a new product.`\n\n\n*Fields*\n\n* **Name Of New Product** (String) - The name of the product\n* **Description Of New Product** (String) - No description\n* **Price Of New Product** (String) - The price of the product\n\n*Post-actions*\n\n* **Cancel** (goes to _Products_) - Cancel goes back to the Products page\n* **Save** (goes to _Products_) - Save goes back to the Products page\n\n\n\n",
      "contentHash": "f826bf19085cb99147d6f326f04a295ee1449cac09096610016994cd61571626",
      "noWriteIfExists": false
    },
    {
      "filename": "public/index.html",
      "content": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>admin-site | _You can edit this description in [&#x60;.projor/project.pglobal.yaml&#x60;](.projor/project.pglobal.yaml)_</title>\n    <link rel=\"stylesheet\" href=\"/index.css\">\n</head>\n\n<body>\n    <div id=\"app\"></div>\n    <script src=\"/index.js\"></script>\n</body>",
      "contentHash": "11e4e116a5baa9bb9230ae760f61578483dc4ee2238d798980bb9d9c2508bfa2",
      "noWriteIfExists": false
    },
    {
      "filename": "README.md",
      "content": "# Admin Site\n\nThis is a template for an _admin frontend site_, using [React](https://react.dev/) and [Tailwind](https://tailwindcss.com/). You can customize this template by editing the [`.projor/.pages` file](.projor/.pages), and using [ProJor](https://projor.io) to generate the code.\n\n[Learn more about this template in the `.projor/README.md`](.projor/README.md).\n\n_You can edit this description in [`.projor/project.pglobal.yaml`](.projor/project.pglobal.yaml)_\n\nTODO: Screenshot here\n\n## Running\n\nYou need to have [Node.js](https://nodejs.org/) and [NPM](https://www.npmjs.com/) installed. Then, you can run the following commands:\n\n```\nnpm install\nnpm run serve\n```\n\nThen, upen `http://localhost:3000` in your browser.\n\n## License\n\nThis template is licensed under the [MIT License](LICENSE.md).\n\n[ProJor](https://projor.io) is licensed under either the [ProJor Free License](https://license.projor.io) or the [ProJor Commercial License](https://license.projor.io).",
      "contentHash": "801f8b27e28c90d6db740bf560a467ef16ba4abc9a0958f395f779e03abe4c9c",
      "noWriteIfExists": false
    },
    {
      "filename": "src/components/AppAction.component.tsx",
      "content": "import { Icon } from \"@iconify/react\";\nimport classNames from \"classnames\";\n\nexport function AppAction(opts: {\n    to: string;\n    name: string;\n    icon?: string;\n    small?: boolean;\n    navigate: (path: string) => void;\n}) {\n    let aClassName = classNames(\n        \"p-2\",\n        {\n            \"text-sm\": opts.small,\n        },\n        {\n            \"bg-blue-500\": true,\n        },\n        {\n            border: true,\n            \"border-blue-400\": true,\n        },\n        {\n            \"text-white\": true,\n        },\n        {\n            \"shadow-lg\": true,\n        },\n        {\n            \"hover:bg-blue-600\": true,\n        },\n        {\n            \"rounded-lg\": true,\n            \"text-center\": !opts.small,\n            flex: true,\n            \"flex-row\": true,\n            \"justify-start\": true,\n            \"items-center\": true,\n            \"gap-2\": true,\n        }\n    );\n    return (\n        <a\n            href=\"#\"\n            className={aClassName}\n            onClick={(ev: any) => {\n                ev.preventDefault();\n                opts.navigate(opts.to);\n            }}\n        >\n            {opts.icon && <Icon icon={opts.icon} />}\n            <span>{opts.name}</span>\n        </a>\n    );\n}\n",
      "contentHash": "2ef60e8fb66949511ec139ea2e978e6118c294062e8b9066a97f472c97ab8c72",
      "noWriteIfExists": false
    },
    {
      "filename": "src/index.tsx",
      "content": "import { createRoot } from \"react-dom/client\";\nimport { useState, useEffect, useRef } from \"react\";\nimport { DashboardPage } from \"./pages/dashboard.page\";\nimport { ProductsPage } from \"./pages/products.page\";\nimport { EditProductPage } from \"./pages/edit-product.page\";\nimport { CreateProductPage } from \"./pages/create-product.page\";\nimport { LoginPage } from \"./pages/login.page\";\n\nfunction App() {\n    const [path, setPath] = useState(window.location.pathname);\n    const currentComponentRef = useRef<any>(LoginPage);\n    const [navigationCounter, setNavigationCounter] = useState(0);\n\n    const navigate = (path: string) => {\n        if (path === \"dashboard\" || path === \"dashboard-page\") {\n            currentComponentRef.current = DashboardPage;\n            setNavigationCounter(navigationCounter + 1);\n            setPath(path);\n        }\n        if (path === \"products\" || path === \"products-page\") {\n            currentComponentRef.current = ProductsPage;\n            setNavigationCounter(navigationCounter + 1);\n            setPath(path);\n        }\n        if (path === \"edit-product\" || path === \"edit-product-page\") {\n            currentComponentRef.current = EditProductPage;\n            setNavigationCounter(navigationCounter + 1);\n            setPath(path);\n        }\n        if (path === \"create-product\" || path === \"create-product-page\") {\n            currentComponentRef.current = CreateProductPage;\n            setNavigationCounter(navigationCounter + 1);\n            setPath(path);\n        }\n        if (path === \"login\") {\n            currentComponentRef.current = LoginPage;\n            setNavigationCounter(navigationCounter + 1);\n            setPath(path);\n        }\n    };\n\n    return <currentComponentRef.current navigate={navigate} />;\n}\n\nconst appEl = document.getElementById(\"app\");\nconst root = createRoot(appEl!);\nroot.render(<App />);\n",
      "contentHash": "e4fae531e94288252fce12c7eba27de34a153af4c803d7a8b82bab1095b812a3",
      "noWriteIfExists": false
    },
    {
      "filename": "src/layout/AppLayout.component.tsx",
      "content": "import { ReactNode } from \"react\";\nimport { Icon } from \"@iconify/react\";\n\nfunction AppHeader(opts: { navigate: (path: string) => void }) {\n    return (\n        <header className=\"w-full flex flex-row justify-between items-center gap-2 p-2 bg-blue-600 text-white shadow-lg\">\n            <div className=\"text-2xl font-bold\">Admin Site</div>\n            <div className=\"flex flex-row justify-start items-center\">\n                <a\n                    href=\"#\"\n                    onClick={(ev) => {\n                        ev.preventDefault();\n                        opts.navigate(\"login\");\n                    }}\n                    className=\"text-sm font-bold\"\n                >\n                    Logout\n                </a>\n            </div>\n        </header>\n    );\n}\n\nfunction AppFooter(opts: { navigate: (path: string) => void }) {\n    return (\n        <footer className=\"w-full flex flex-row justify-center items-center gap-2 p-2 bg-blue-600 text-gray-200\">\n            <div className=\"text-sm\">\n                Admin Site - Version: 0.0.1 | Generated using{\" \"}\n                <a href=\"https://projor.io\" className=\"underline\">\n                    Projor\n                </a>\n                .\n            </div>\n        </footer>\n    );\n}\n\nfunction AppSidebar(opts: { navigate: (path: string) => void }) {\n    return (\n        <aside className=\"w-64 bg-blue-800 text-white grow shadow-lg\">\n            <div className=\"flex flex-col justify-start items-start gap-2 p-4\">\n                <h1 className=\"text-lg font-bold mt-8\">Navigation</h1>\n                <a\n                    href=\"#\"\n                    onClick={(ev) => {\n                        ev.preventDefault();\n                        opts.navigate(\"dashboard\");\n                    }}\n                    className=\"text-sm font-bold flex flex-row justify-start items-center\"\n                >\n                    <Icon icon={`ic:baseline-dashboard`} />\n                    <span>Dashboard</span>\n                </a>\n                <a\n                    href=\"#\"\n                    onClick={(ev) => {\n                        ev.preventDefault();\n                        opts.navigate(\"products\");\n                    }}\n                    className=\"text-sm font-bold flex flex-row justify-start items-center\"\n                >\n                    <Icon icon={`ic:baseline-shopping-cart`} />\n                    <span>Products</span>\n                </a>\n            </div>\n        </aside>\n    );\n}\n\nexport function AppLayout(opts: {\n    navigate: (path: string) => void;\n    content: (contentOpts: { navigate: (path: string) => void }) => ReactNode;\n}) {\n    return (\n        <div className=\"w-screen min-h-screen flex flex-col justify-stretch items-center\">\n            <AppHeader navigate={opts.navigate} />\n            <div className=\"w-full grow flex flex-row justify-stretch items-stretch\">\n                <AppSidebar navigate={opts.navigate} />\n                <main className=\"w-full flex flex-col justify-start items-start grow\">\n                    {opts.content({\n                        navigate: opts.navigate,\n                    })}\n                </main>\n            </div>\n            <AppFooter navigate={opts.navigate} />\n        </div>\n    );\n}\n",
      "contentHash": "4d30afd516bdc8ff9ba53d0c8778234308e51f59cfc00443e7fa3efe80f3538a",
      "noWriteIfExists": false
    },
    {
      "filename": "src/pages/create-product.page.tsx",
      "content": "import { AppLayout } from \"../layout/AppLayout.component\";\nimport { AppAction } from \"../components/AppAction.component\";\n\nfunction CreateProductPreActions(opts: { navigate: (path: string) => void }) {\n    return (\n        <div className=\"flex flex-row justify-start items-center wrap gap-4\"></div>\n    );\n}\nfunction CreateProductPostActions(opts: { navigate: (path: string) => void }) {\n    return (\n        <div className=\"flex flex-row justify-start items-center wrap gap-4\">\n            <AppAction\n                to=\"products\"\n                name=\"Cancel\"\n                icon={`ic:baseline-cancel`}\n                navigate={opts.navigate}\n            />\n            <AppAction to=\"products\" name=\"Save\" navigate={opts.navigate} />\n        </div>\n    );\n}\nfunction CreateProductForm(opts: { navigate: (path: string) => void }) {\n    return (\n        <div className=\"w-full grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <div className=\"flex flex-col justify-start items-start gap-2\">\n                <p className=\"text-sm text-gray-500\">Name Of New Product</p>\n                <input\n                    type=\"text\"\n                    placeholder={`Vacuum Cleaner`}\n                    className=\"w-full p-2 border border-gray-500 focus:outline-gray-700 rounded-lg\"\n                />\n            </div>\n            <div className=\"flex flex-col justify-start items-start gap-2\">\n                <p className=\"text-sm text-gray-500\">\n                    Description Of New Product\n                </p>\n                <input\n                    type=\"text\"\n                    placeholder={`This device will suck the dust from the floor to make it cleaner.`}\n                    className=\"w-full p-2 border border-gray-500 focus:outline-gray-700 rounded-lg\"\n                />\n            </div>\n            <div className=\"flex flex-col justify-start items-start gap-2\">\n                <p className=\"text-sm text-gray-500\">Price Of New Product</p>\n                <input\n                    type=\"text\"\n                    placeholder={`$99.99`}\n                    className=\"w-full p-2 border border-gray-500 focus:outline-gray-700 rounded-lg\"\n                />\n            </div>\n        </div>\n    );\n}\n\nfunction CreateProductContent(opts: { navigate: (path: string) => void }) {\n    return (\n        <div className=\"flex flex-col justify-start items-start gap-4\">\n            <CreateProductPreActions navigate={opts.navigate} />\n            <CreateProductForm navigate={opts.navigate} />\n            <CreateProductPostActions navigate={opts.navigate} />\n        </div>\n    );\n}\n\nexport function CreateProductPage(opts: { navigate: (path: string) => void }) {\n    return (\n        <AppLayout\n            content={() => (\n                <div className=\"w-full flex flex-col gap-2 p-4 bg-white\">\n                    <h1 className=\"text-4xl text-gray-600 font-bold\">\n                        Create Product\n                    </h1>\n                    <h2 className=\"text-xl text-gray-400 font-serif italic\">\n                        You are creating a new product.\n                    </h2>\n                    <hr className=\"border border-b border-gray-200\" />\n                    <CreateProductContent navigate={opts.navigate} />\n                </div>\n            )}\n            icon={`ic:baseline-add`}\n            navigate={opts.navigate}\n        />\n    );\n}\n",
      "contentHash": "2dbd0ff732104f06bfcd8352c68c662767b0249a791d2dc93cdd907da16e187a",
      "noWriteIfExists": false
    },
    {
      "filename": "src/pages/dashboard.page.tsx",
      "content": "import { AppLayout } from \"../layout/AppLayout.component\";\nimport { AppAction } from \"../components/AppAction.component\";\n\nfunction DashboardPreActions(opts: { navigate: (path: string) => void }) {\n    return (\n        <div className=\"flex flex-row justify-start items-center wrap gap-4\"></div>\n    );\n}\nfunction DashboardPostActions(opts: { navigate: (path: string) => void }) {\n    return (\n        <div className=\"flex flex-row justify-start items-center wrap gap-4\">\n            <AppAction\n                to=\"products\"\n                name=\"Open Products\"\n                navigate={opts.navigate}\n            />\n        </div>\n    );\n}\n\nfunction DashboardWidgets(opts: { navigate: (path: string) => void }) {\n    return (\n        <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n            <div className=\"p-2 border border-gray-500 rounded-lg text-center text-gray-500\">\n                <h1 className=\"text-xl\">Example widget</h1>\n                <p className=\"text-sm italic text-gray-500\">\n                    This is an example widget, dashboard needs some more work.\n                </p>\n            </div>\n        </div>\n    );\n}\n\nfunction DashboardContent(opts: { navigate: (path: string) => void }) {\n    return (\n        <div className=\"flex flex-col justify-start items-start gap-4\">\n            <DashboardPreActions navigate={opts.navigate} />\n            <DashboardWidgets navigate={opts.navigate} />\n            <DashboardPostActions navigate={opts.navigate} />\n        </div>\n    );\n}\nexport function DashboardPage(opts: { navigate: (path: string) => void }) {\n    return (\n        <AppLayout\n            content={() => (\n                <div className=\"w-full flex flex-col gap-2 p-4 bg-white\">\n                    <h1 className=\"text-4xl text-gray-600 font-bold\">\n                        Admin Dashboard\n                    </h1>\n                    <h2 className=\"text-xl text-gray-400 font-serif italic\">\n                        This is the admin dashboard. It is left empty for this\n                        example.\n                    </h2>\n                    <hr className=\"border border-b border-gray-200\" />\n                    <DashboardContent navigate={opts.navigate} />\n                </div>\n            )}\n            icon={`ic:baseline-dashboard`}\n            navigate={opts.navigate}\n        />\n    );\n}\n",
      "contentHash": "131666d3191851cd7540353bbb7bd8de4d1852efa8ad6819a4e565a7ad337259",
      "noWriteIfExists": false
    },
    {
      "filename": "src/pages/edit-product.page.tsx",
      "content": "import { AppLayout } from \"../layout/AppLayout.component\";\nimport { AppAction } from \"../components/AppAction.component\";\n\nfunction EditProductPreActions(opts: { navigate: (path: string) => void }) {\n    return (\n        <div className=\"flex flex-row justify-start items-center wrap gap-4\"></div>\n    );\n}\nfunction EditProductPostActions(opts: { navigate: (path: string) => void }) {\n    return (\n        <div className=\"flex flex-row justify-start items-center wrap gap-4\">\n            <AppAction\n                to=\"products\"\n                name=\"Cancel\"\n                icon={`ic:baseline-cancel`}\n                navigate={opts.navigate}\n            />\n            <AppAction\n                to=\"products\"\n                name=\"Save\"\n                icon={`ic:baseline-save`}\n                navigate={opts.navigate}\n            />\n            <AppAction to=\"products\" name=\"Delete\" navigate={opts.navigate} />\n        </div>\n    );\n}\nfunction EditProductForm(opts: { navigate: (path: string) => void }) {\n    return (\n        <div className=\"w-full grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <div className=\"flex flex-col justify-start items-start gap-2\">\n                <p className=\"text-sm text-gray-500\">Name</p>\n                <input\n                    type=\"text\"\n                    placeholder={`Vacuum Cleaner`}\n                    className=\"w-full p-2 border border-gray-500 focus:outline-gray-700 rounded-lg\"\n                />\n            </div>\n            <div className=\"flex flex-col justify-start items-start gap-2\">\n                <p className=\"text-sm text-gray-500\">Description</p>\n                <input\n                    type=\"text\"\n                    placeholder={`This device will suck the dust from the floor to make it cleaner.`}\n                    className=\"w-full p-2 border border-gray-500 focus:outline-gray-700 rounded-lg\"\n                />\n            </div>\n            <div className=\"flex flex-col justify-start items-start gap-2\">\n                <p className=\"text-sm text-gray-500\">Price</p>\n                <input\n                    type=\"text\"\n                    placeholder={`$99.99`}\n                    className=\"w-full p-2 border border-gray-500 focus:outline-gray-700 rounded-lg\"\n                />\n            </div>\n        </div>\n    );\n}\n\nfunction EditProductContent(opts: { navigate: (path: string) => void }) {\n    return (\n        <div className=\"flex flex-col justify-start items-start gap-4\">\n            <EditProductPreActions navigate={opts.navigate} />\n            <EditProductForm navigate={opts.navigate} />\n            <EditProductPostActions navigate={opts.navigate} />\n        </div>\n    );\n}\n\nexport function EditProductPage(opts: { navigate: (path: string) => void }) {\n    return (\n        <AppLayout\n            content={() => (\n                <div className=\"w-full flex flex-col gap-2 p-4 bg-white\">\n                    <h1 className=\"text-4xl text-gray-600 font-bold\">\n                        Edit Vacuum Cleaner\n                    </h1>\n                    <h2 className=\"text-xl text-gray-400 font-serif italic\">\n                        You are editing product\n                        465191de-2108-4dc0-ac81-d3d53f2176e1 called Vacuum\n                        Cleaner.\n                    </h2>\n                    <hr className=\"border border-b border-gray-200\" />\n                    <EditProductContent navigate={opts.navigate} />\n                </div>\n            )}\n            icon={`ic:baseline-edit`}\n            navigate={opts.navigate}\n        />\n    );\n}\n",
      "contentHash": "7307ebb515eda648e136b38887ae166cae05063f6e90a90af956b48710a45cc3",
      "noWriteIfExists": false
    },
    {
      "filename": "src/pages/login.page.tsx",
      "content": "export function LoginPage(opts: { navigate: (path: string) => void }) {\n    const onLogin = (ev: any) => {\n        ev.preventDefault();\n        opts.navigate(\"dashboard\");\n    };\n\n    return (\n        <div className=\"w-screen h-screen flex flex-col justify-center items-center\">\n            <div className=\"w-96 p-4 border border-gray-200 rounded-lg flex flex-col justify-center items-center gap-2\">\n                <h1 className=\"text-4xl font-bold\">Login</h1>\n                <form className=\"flex flex-col gap-4\" onSubmit={onLogin}>\n                    <input\n                        type=\"text\"\n                        placeholder=\"Username\"\n                        className=\"p-2 border border-gray-300 rounded\"\n                    />\n                    <input\n                        type=\"password\"\n                        placeholder=\"Password\"\n                        className=\"p-2 border border-gray-300 rounded\"\n                    />\n                    <button\n                        type=\"submit\"\n                        className=\"p-2 bg-blue-500 text-white rounded\"\n                    >\n                        Login\n                    </button>\n                </form>\n            </div>\n        </div>\n    );\n}\n",
      "contentHash": "e3eb188663789ecf69c51e867992cf70d38cf369bdfb1dd5c4571f2d6b3974ec",
      "noWriteIfExists": false
    },
    {
      "filename": "src/pages/products.page.tsx",
      "content": "import { AppLayout } from \"../layout/AppLayout.component\";\nimport { AppAction } from \"../components/AppAction.component\";\n\nfunction ProductsPreActions(opts: { navigate: (path: string) => void }) {\n    return (\n        <div className=\"flex flex-row justify-start items-center wrap gap-4\">\n            <AppAction\n                to=\"create-product\"\n                name=\"Create\"\n                icon={`ic:baseline-add`}\n                navigate={opts.navigate}\n            />\n        </div>\n    );\n}\nfunction ProductsPostActions(opts: { navigate: (path: string) => void }) {\n    return (\n        <div className=\"flex flex-row justify-start items-center wrap gap-4\">\n            <AppAction\n                to=\"dashboard\"\n                name=\"Open Dashboard\"\n                navigate={opts.navigate}\n            />\n        </div>\n    );\n}\nfunction ProductsItemActions(opts: { navigate: (path: string) => void }) {\n    return (\n        <div className=\"flex flex-row wrap justify-start items-center gap-2\">\n            <AppAction\n                to=\"edit-product\"\n                name=\"Edit\"\n                icon={`ic:baseline-edit`}\n                navigate={opts.navigate}\n                small\n            />\n            <AppAction\n                to=\"products\"\n                name=\"Delete\"\n                icon={`ic:baseline-delete`}\n                navigate={opts.navigate}\n                small\n            />\n        </div>\n    );\n}\nfunction ProductsTable(opts: { navigate: (path: string) => void }) {\n    const values = [\n        {\n            id: `465191de-2108-4dc0-ac81-d3d53f2176e1`,\n            name: `Vacuum Cleaner`,\n            description: `This device will suck the dust from the floor to make it cleaner.`,\n            buysLastWeek: `57`,\n            price: `$99.99`,\n        },\n    ];\n\n    return (\n        <table className=\"w-full\">\n            <thead className=\"border-b border-black\">\n                <tr>\n                    <th className=\"p-2\">Id</th>\n                    <th className=\"p-2\">Name</th>\n                    <th className=\"p-2\">Description</th>\n                    <th className=\"p-2\">Buys Last Week</th>\n                    <th className=\"p-2\">Price</th>\n                    <th className=\"p-2\">Actions</th>\n                </tr>\n            </thead>\n            <tbody>\n                {values.map((value, index) => (\n                    <tr key={index} className=\"border-b border-gray-200 p-2\">\n                        <td className=\"p-2 text-center\">{value.id}</td>\n                        <td className=\"p-2 text-center\">{value.name}</td>\n                        <td className=\"p-2 text-center\">{value.description}</td>\n                        <td className=\"p-2 text-center\">\n                            {value.buysLastWeek}\n                        </td>\n                        <td className=\"p-2 text-center\">{value.price}</td>\n                        <td className=\"p-2 text-center\">\n                            <ProductsItemActions navigate={opts.navigate} />\n                        </td>\n                    </tr>\n                ))}\n            </tbody>\n        </table>\n    );\n}\n\nfunction ProductsContent(opts: { navigate: (path: string) => void }) {\n    return (\n        <div className=\"w-full flex flex-col justify-start items-start gap-4\">\n            <ProductsPreActions navigate={opts.navigate} />\n            <ProductsTable navigate={opts.navigate} />\n            <ProductsPostActions navigate={opts.navigate} />\n        </div>\n    );\n}\n\nexport function ProductsPage(opts: { navigate: (path: string) => void }) {\n    return (\n        <AppLayout\n            content={() => (\n                <div className=\"w-full flex flex-col gap-2 p-4 bg-white\">\n                    <h1 className=\"text-4xl text-gray-600 font-bold\">\n                        Products\n                    </h1>\n                    <h2 className=\"text-xl text-gray-400 font-serif italic\">\n                        This is the list of products. You can edit or delete\n                        them.\n                    </h2>\n                    <hr className=\"border border-b border-gray-200\" />\n                    <ProductsContent navigate={opts.navigate} />\n                </div>\n            )}\n            icon={`ic:baseline-shopping-cart`}\n            navigate={opts.navigate}\n        />\n    );\n}\n",
      "contentHash": "447a55a305009e2cd04355734c88b4f4eaea76218cccc734e97997ae7f95e784",
      "noWriteIfExists": false
    },
    {
      "filename": "src/tailwind.css",
      "content": "@tailwind base;\n@tailwind components;\n@tailwind utilities;\n",
      "contentHash": "cc1a7ad0d019ddb1d32d0ecb588ba0ac26ce41d8625dd6c366348b25f83a28ec",
      "noWriteIfExists": false
    },
    {
      "filename": "tailwind.config.js",
      "content": "/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n    content: [\n        \"public/**/*.html\",\n        \"src/**/*.{js,jsx,ts,tsx}\",\n        \"src/**/*.page.{js,jsx,ts,tsx}\",\n        \"src/**/*.component.{js,jsx,ts,tsx}\",\n    ],\n    theme: {\n        extend: {},\n    },\n    plugins: [],\n};\n",
      "contentHash": "8fa0ebea039e7ff6574a342679e90cfc969ef9f47feec164772ae2354af70d12",
      "noWriteIfExists": false
    },
    {
      "filename": "tsconfig.json",
      "content": "{\n    \"compilerOptions\": {\n        \"target\": \"ES2015\",\n        \"module\": \"ES2015\",\n        \"moduleResolution\": \"Node\",\n        \"strict\": true,\n        \"esModuleInterop\": true,\n        \"skipLibCheck\": true,\n        \"allowSyntheticDefaultImports\": true,\n        \"jsx\": \"react-native\"\n    },\n    \"include\": [\"src/**/*.ts\", \"src/**/*.tsx\"],\n    \"exclude\": [\"node_modules\"]\n}\n",
      "contentHash": "ff0ac3ac19514bc54c5f55ca55b73aecfd039b8da6d300af689f11bb6d384391",
      "noWriteIfExists": false
    }
  ]
}